<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- 
     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="true">
		<property name="driverClass" value="com.jdbc.mysql.Driver">
		</property>
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/studentinfo?autoReconnect=true">
		</property>
		<property name="user" value="root">
		</property>
		<property name="password" value="321">
		</property>  
		<property name="maxPoolSize" value="20">
		</property>
		<property name="minPoolSize" value="1">
		</property>
		<property name="initialPoolSize" value="2">
		</property>
		<property name="maxIdleTime" value="20">
		</property>

	</bean>
	   -->
	 <bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation" >	
				<value>classpath:hibernate.cfg.xml</value>
		</property>	
	</bean>	
	<!--  
	<bean id="userDao" class="com.cn.test.dao.impl.UserDaoImpl">
	  <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="userService" class="com.cn.test.service.impl.UserServiceImpl">
	  <property name="userDao"  ref="userDao"></property>
	</bean>
	-->
	 <!-- 配置持久化对象进行操作时的事务处理 -->
	 
     <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
         <property name="sessionFactory">
             <ref bean="sessionFactory"/>
         </property>
     </bean>
     <!-- 如果使用@Resource注入，配置文件必须包含(<context:annotation-config />)配置 -->
     <context:annotation-config />
     
      <!-- 使用annotation定义事务 -->
        
      <tx:annotation-driven transaction-manager="transactionManager" />
      <!-- proxy-target-class="true"  -->
      
      <bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED</prop>  
                <prop key="update*">PROPAGATION_REQUIRED</prop>   
                <prop key="modify*">PROPAGATION_REQUIRED</prop>    
                <prop key="delete*">PROPAGATION_REQUIRED</prop>      
                <prop key="remove*">PROPAGATION_REQUIRED</prop>                    
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop> 
				<prop key="search*">PROPAGATION_REQUIRED,readOnly</prop> 
				<prop key="*">PROPAGATION_REQUIRED</prop> 
			</props>
		</property>
	</bean>


	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		 <!-- 可以是Service或DAO层（最好是针对业务层*Service） -->
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>		
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
				<!-- 此处增加新的Interceptor  -->
			</list>
		</property>
	</bean>
	
	<bean
		class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="transactionInterceptor" />
	</bean>
	 
     <!-- 事务传播性配置 -->
       <!-- 
     <tx:advice id="txAdvice"  
		transaction-manager="transactionManager">
		<tx:attributes>
		<tx:method name="save*"/>
		<tx:method name="delete*"/>
		<tx:method name="update*"/>
		<tx:method name="list*"/>
		<tx:method name="get*"/>
		<tx:method name="add*"/>
		<tx:method name="insert*"/>
		<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
   -->
      
	 

</beans>